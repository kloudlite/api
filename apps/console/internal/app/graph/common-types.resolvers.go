package graph

// This file will be automatically regenerated based on the schema, any resolver implementations
// will be copied through when generating and any unknown code will be moved to the end.
// Code generated by github.com/99designs/gqlgen version v0.17.28

import (
	"context"
	"fmt"

	v11 "github.com/kloudlite/operator/apis/crds/v1"
	"github.com/kloudlite/operator/pkg/operator"
	"k8s.io/apimachinery/pkg/apis/meta/v1"
	"kloudlite.io/apps/console/internal/app/graph/generated"
	"kloudlite.io/apps/console/internal/app/graph/model"
	"kloudlite.io/apps/console/internal/domain/entities"
	"kloudlite.io/pkg/types"
)

// Containers is the resolver for the containers field.
func (r *github_com__kloudlite__operator__apis__crds__v1_AppSpecResolver) Containers(ctx context.Context, obj *v11.AppSpec) ([]*model.GithubComKloudliteOperatorApisCrdsV1AppSpecContainers, error) {
	panic(fmt.Errorf("not implemented: Containers - containers"))
}

// Hpa is the resolver for the hpa field.
func (r *github_com__kloudlite__operator__apis__crds__v1_AppSpecResolver) Hpa(ctx context.Context, obj *v11.AppSpec) (*model.GithubComKloudliteOperatorApisCrdsV1AppSpecHpa, error) {
	panic(fmt.Errorf("not implemented: Hpa - hpa"))
}

// Intercept is the resolver for the intercept field.
func (r *github_com__kloudlite__operator__apis__crds__v1_AppSpecResolver) Intercept(ctx context.Context, obj *v11.AppSpec) (*model.GithubComKloudliteOperatorApisCrdsV1AppSpecIntercept, error) {
	panic(fmt.Errorf("not implemented: Intercept - intercept"))
}

// NodeSelector is the resolver for the nodeSelector field.
func (r *github_com__kloudlite__operator__apis__crds__v1_AppSpecResolver) NodeSelector(ctx context.Context, obj *v11.AppSpec) (map[string]interface{}, error) {
	panic(fmt.Errorf("not implemented: NodeSelector - nodeSelector"))
}

// Services is the resolver for the services field.
func (r *github_com__kloudlite__operator__apis__crds__v1_AppSpecResolver) Services(ctx context.Context, obj *v11.AppSpec) ([]*model.GithubComKloudliteOperatorApisCrdsV1AppSpecServices, error) {
	panic(fmt.Errorf("not implemented: Services - services"))
}

// Tolerations is the resolver for the tolerations field.
func (r *github_com__kloudlite__operator__apis__crds__v1_AppSpecResolver) Tolerations(ctx context.Context, obj *v11.AppSpec) ([]*model.GithubComKloudliteOperatorApisCrdsV1AppSpecTolerations, error) {
	panic(fmt.Errorf("not implemented: Tolerations - tolerations"))
}

// Inputs is the resolver for the inputs field.
func (r *github_com__kloudlite__operator__apis__crds__v1_ManagedResourceSpecResolver) Inputs(ctx context.Context, obj *v11.ManagedResourceSpec) (map[string]interface{}, error) {
	panic(fmt.Errorf("not implemented: Inputs - inputs"))
}

// MresKind is the resolver for the mresKind field.
func (r *github_com__kloudlite__operator__apis__crds__v1_ManagedResourceSpecResolver) MresKind(ctx context.Context, obj *v11.ManagedResourceSpec) (*model.GithubComKloudliteOperatorApisCrdsV1ManagedResourceSpecMresKind, error) {
	panic(fmt.Errorf("not implemented: MresKind - mresKind"))
}

// MsvcRef is the resolver for the msvcRef field.
func (r *github_com__kloudlite__operator__apis__crds__v1_ManagedResourceSpecResolver) MsvcRef(ctx context.Context, obj *v11.ManagedResourceSpec) (*model.GithubComKloudliteOperatorApisCrdsV1ManagedResourceSpecMsvcRef, error) {
	panic(fmt.Errorf("not implemented: MsvcRef - msvcRef"))
}

// Inputs is the resolver for the inputs field.
func (r *github_com__kloudlite__operator__apis__crds__v1_ManagedServiceSpecResolver) Inputs(ctx context.Context, obj *v11.ManagedServiceSpec) (map[string]interface{}, error) {
	panic(fmt.Errorf("not implemented: Inputs - inputs"))
}

// MsvcKind is the resolver for the msvcKind field.
func (r *github_com__kloudlite__operator__apis__crds__v1_ManagedServiceSpecResolver) MsvcKind(ctx context.Context, obj *v11.ManagedServiceSpec) (*model.GithubComKloudliteOperatorApisCrdsV1ManagedServiceSpecMsvcKind, error) {
	panic(fmt.Errorf("not implemented: MsvcKind - msvcKind"))
}

// NodeSelector is the resolver for the nodeSelector field.
func (r *github_com__kloudlite__operator__apis__crds__v1_ManagedServiceSpecResolver) NodeSelector(ctx context.Context, obj *v11.ManagedServiceSpec) (map[string]interface{}, error) {
	panic(fmt.Errorf("not implemented: NodeSelector - nodeSelector"))
}

// Tolerations is the resolver for the tolerations field.
func (r *github_com__kloudlite__operator__apis__crds__v1_ManagedServiceSpecResolver) Tolerations(ctx context.Context, obj *v11.ManagedServiceSpec) ([]*model.GithubComKloudliteOperatorApisCrdsV1ManagedServiceSpecTolerations, error) {
	panic(fmt.Errorf("not implemented: Tolerations - tolerations"))
}

// BasicAuth is the resolver for the basicAuth field.
func (r *github_com__kloudlite__operator__apis__crds__v1_RouterSpecResolver) BasicAuth(ctx context.Context, obj *v11.RouterSpec) (*model.GithubComKloudliteOperatorApisCrdsV1RouterSpecBasicAuth, error) {
	panic(fmt.Errorf("not implemented: BasicAuth - basicAuth"))
}

// Cors is the resolver for the cors field.
func (r *github_com__kloudlite__operator__apis__crds__v1_RouterSpecResolver) Cors(ctx context.Context, obj *v11.RouterSpec) (*model.GithubComKloudliteOperatorApisCrdsV1RouterSpecCors, error) {
	panic(fmt.Errorf("not implemented: Cors - cors"))
}

// HTTPS is the resolver for the https field.
func (r *github_com__kloudlite__operator__apis__crds__v1_RouterSpecResolver) HTTPS(ctx context.Context, obj *v11.RouterSpec) (*model.GithubComKloudliteOperatorApisCrdsV1RouterSpecHTTPS, error) {
	panic(fmt.Errorf("not implemented: HTTPS - https"))
}

// RateLimit is the resolver for the rateLimit field.
func (r *github_com__kloudlite__operator__apis__crds__v1_RouterSpecResolver) RateLimit(ctx context.Context, obj *v11.RouterSpec) (*model.GithubComKloudliteOperatorApisCrdsV1RouterSpecRateLimit, error) {
	panic(fmt.Errorf("not implemented: RateLimit - rateLimit"))
}

// Routes is the resolver for the routes field.
func (r *github_com__kloudlite__operator__apis__crds__v1_RouterSpecResolver) Routes(ctx context.Context, obj *v11.RouterSpec) ([]*model.GithubComKloudliteOperatorApisCrdsV1RouterSpecRoutes, error) {
	panic(fmt.Errorf("not implemented: Routes - routes"))
}

// Checks is the resolver for the checks field.
func (r *github_com__kloudlite__operator__pkg__operator_StatusResolver) Checks(ctx context.Context, obj *operator.Status) (map[string]interface{}, error) {
	panic(fmt.Errorf("not implemented: Checks - checks"))
}

// LastReconcileTime is the resolver for the lastReconcileTime field.
func (r *github_com__kloudlite__operator__pkg__operator_StatusResolver) LastReconcileTime(ctx context.Context, obj *operator.Status) (*string, error) {
	panic(fmt.Errorf("not implemented: LastReconcileTime - lastReconcileTime"))
}

// Message is the resolver for the message field.
func (r *github_com__kloudlite__operator__pkg__operator_StatusResolver) Message(ctx context.Context, obj *operator.Status) (*model.GithubComKloudliteOperatorPkgRawJSONRawJSON, error) {
	panic(fmt.Errorf("not implemented: Message - message"))
}

// Resources is the resolver for the resources field.
func (r *github_com__kloudlite__operator__pkg__operator_StatusResolver) Resources(ctx context.Context, obj *operator.Status) ([]*model.GithubComKloudliteOperatorPkgOperatorResourceRef, error) {
	panic(fmt.Errorf("not implemented: Resources - resources"))
}

// Action is the resolver for the action field.
func (r *kloudlite_io__pkg__types_SyncStatusResolver) Action(ctx context.Context, obj *types.SyncStatus) (string, error) {
	panic(fmt.Errorf("not implemented: Action - action"))
}

// LastSyncedAt is the resolver for the lastSyncedAt field.
func (r *kloudlite_io__pkg__types_SyncStatusResolver) LastSyncedAt(ctx context.Context, obj *types.SyncStatus) (*string, error) {
	panic(fmt.Errorf("not implemented: LastSyncedAt - lastSyncedAt"))
}

// State is the resolver for the state field.
func (r *kloudlite_io__pkg__types_SyncStatusResolver) State(ctx context.Context, obj *types.SyncStatus) (*string, error) {
	panic(fmt.Errorf("not implemented: State - state"))
}

// SyncScheduledAt is the resolver for the syncScheduledAt field.
func (r *kloudlite_io__pkg__types_SyncStatusResolver) SyncScheduledAt(ctx context.Context, obj *types.SyncStatus) (*string, error) {
	panic(fmt.Errorf("not implemented: SyncScheduledAt - syncScheduledAt"))
}

// Annotations is the resolver for the annotations field.
func (r *metadataResolver) Annotations(ctx context.Context, obj *v1.ObjectMeta) (map[string]interface{}, error) {
	panic(fmt.Errorf("not implemented: Annotations - annotations"))
}

// Labels is the resolver for the labels field.
func (r *metadataResolver) Labels(ctx context.Context, obj *v1.ObjectMeta) (map[string]interface{}, error) {
	panic(fmt.Errorf("not implemented: Labels - labels"))
}

// Containers is the resolver for the containers field.
func (r *github_com__kloudlite__operator__apis__crds__v1_AppSpecInResolver) Containers(ctx context.Context, obj *v11.AppSpec, data []*model.GithubComKloudliteOperatorApisCrdsV1AppSpecContainersIn) error {
	panic(fmt.Errorf("not implemented: Containers - containers"))
}

// Hpa is the resolver for the hpa field.
func (r *github_com__kloudlite__operator__apis__crds__v1_AppSpecInResolver) Hpa(ctx context.Context, obj *v11.AppSpec, data *model.GithubComKloudliteOperatorApisCrdsV1AppSpecHpaIn) error {
	panic(fmt.Errorf("not implemented: Hpa - hpa"))
}

// Intercept is the resolver for the intercept field.
func (r *github_com__kloudlite__operator__apis__crds__v1_AppSpecInResolver) Intercept(ctx context.Context, obj *v11.AppSpec, data *model.GithubComKloudliteOperatorApisCrdsV1AppSpecInterceptIn) error {
	panic(fmt.Errorf("not implemented: Intercept - intercept"))
}

// NodeSelector is the resolver for the nodeSelector field.
func (r *github_com__kloudlite__operator__apis__crds__v1_AppSpecInResolver) NodeSelector(ctx context.Context, obj *v11.AppSpec, data map[string]interface{}) error {
	panic(fmt.Errorf("not implemented: NodeSelector - nodeSelector"))
}

// Services is the resolver for the services field.
func (r *github_com__kloudlite__operator__apis__crds__v1_AppSpecInResolver) Services(ctx context.Context, obj *v11.AppSpec, data []*model.GithubComKloudliteOperatorApisCrdsV1AppSpecServicesIn) error {
	panic(fmt.Errorf("not implemented: Services - services"))
}

// Tolerations is the resolver for the tolerations field.
func (r *github_com__kloudlite__operator__apis__crds__v1_AppSpecInResolver) Tolerations(ctx context.Context, obj *v11.AppSpec, data []*model.GithubComKloudliteOperatorApisCrdsV1AppSpecTolerationsIn) error {
	panic(fmt.Errorf("not implemented: Tolerations - tolerations"))
}

// Inputs is the resolver for the inputs field.
func (r *github_com__kloudlite__operator__apis__crds__v1_ManagedResourceSpecInResolver) Inputs(ctx context.Context, obj *v11.ManagedResourceSpec, data map[string]interface{}) error {
	panic(fmt.Errorf("not implemented: Inputs - inputs"))
}

// MresKind is the resolver for the mresKind field.
func (r *github_com__kloudlite__operator__apis__crds__v1_ManagedResourceSpecInResolver) MresKind(ctx context.Context, obj *v11.ManagedResourceSpec, data *model.GithubComKloudliteOperatorApisCrdsV1ManagedResourceSpecMresKindIn) error {
	panic(fmt.Errorf("not implemented: MresKind - mresKind"))
}

// MsvcRef is the resolver for the msvcRef field.
func (r *github_com__kloudlite__operator__apis__crds__v1_ManagedResourceSpecInResolver) MsvcRef(ctx context.Context, obj *v11.ManagedResourceSpec, data *model.GithubComKloudliteOperatorApisCrdsV1ManagedResourceSpecMsvcRefIn) error {
	panic(fmt.Errorf("not implemented: MsvcRef - msvcRef"))
}

// Inputs is the resolver for the inputs field.
func (r *github_com__kloudlite__operator__apis__crds__v1_ManagedServiceSpecInResolver) Inputs(ctx context.Context, obj *v11.ManagedServiceSpec, data map[string]interface{}) error {
	panic(fmt.Errorf("not implemented: Inputs - inputs"))
}

// MsvcKind is the resolver for the msvcKind field.
func (r *github_com__kloudlite__operator__apis__crds__v1_ManagedServiceSpecInResolver) MsvcKind(ctx context.Context, obj *v11.ManagedServiceSpec, data *model.GithubComKloudliteOperatorApisCrdsV1ManagedServiceSpecMsvcKindIn) error {
	panic(fmt.Errorf("not implemented: MsvcKind - msvcKind"))
}

// NodeSelector is the resolver for the nodeSelector field.
func (r *github_com__kloudlite__operator__apis__crds__v1_ManagedServiceSpecInResolver) NodeSelector(ctx context.Context, obj *v11.ManagedServiceSpec, data map[string]interface{}) error {
	panic(fmt.Errorf("not implemented: NodeSelector - nodeSelector"))
}

// Tolerations is the resolver for the tolerations field.
func (r *github_com__kloudlite__operator__apis__crds__v1_ManagedServiceSpecInResolver) Tolerations(ctx context.Context, obj *v11.ManagedServiceSpec, data []*model.GithubComKloudliteOperatorApisCrdsV1ManagedServiceSpecTolerationsIn) error {
	panic(fmt.Errorf("not implemented: Tolerations - tolerations"))
}

// BasicAuth is the resolver for the basicAuth field.
func (r *github_com__kloudlite__operator__apis__crds__v1_RouterSpecInResolver) BasicAuth(ctx context.Context, obj *v11.RouterSpec, data *model.GithubComKloudliteOperatorApisCrdsV1RouterSpecBasicAuthIn) error {
	panic(fmt.Errorf("not implemented: BasicAuth - basicAuth"))
}

// Cors is the resolver for the cors field.
func (r *github_com__kloudlite__operator__apis__crds__v1_RouterSpecInResolver) Cors(ctx context.Context, obj *v11.RouterSpec, data *model.GithubComKloudliteOperatorApisCrdsV1RouterSpecCorsIn) error {
	panic(fmt.Errorf("not implemented: Cors - cors"))
}

// HTTPS is the resolver for the https field.
func (r *github_com__kloudlite__operator__apis__crds__v1_RouterSpecInResolver) HTTPS(ctx context.Context, obj *v11.RouterSpec, data *model.GithubComKloudliteOperatorApisCrdsV1RouterSpecHTTPSIn) error {
	panic(fmt.Errorf("not implemented: HTTPS - https"))
}

// RateLimit is the resolver for the rateLimit field.
func (r *github_com__kloudlite__operator__apis__crds__v1_RouterSpecInResolver) RateLimit(ctx context.Context, obj *v11.RouterSpec, data *model.GithubComKloudliteOperatorApisCrdsV1RouterSpecRateLimitIn) error {
	panic(fmt.Errorf("not implemented: RateLimit - rateLimit"))
}

// Routes is the resolver for the routes field.
func (r *github_com__kloudlite__operator__apis__crds__v1_RouterSpecInResolver) Routes(ctx context.Context, obj *v11.RouterSpec, data []*model.GithubComKloudliteOperatorApisCrdsV1RouterSpecRoutesIn) error {
	panic(fmt.Errorf("not implemented: Routes - routes"))
}

// Action is the resolver for the action field.
func (r *kloudlite_io__pkg__types_SyncStatusInResolver) Action(ctx context.Context, obj *types.SyncStatus, data string) error {
	panic(fmt.Errorf("not implemented: Action - action"))
}

// LastSyncedAt is the resolver for the lastSyncedAt field.
func (r *kloudlite_io__pkg__types_SyncStatusInResolver) LastSyncedAt(ctx context.Context, obj *types.SyncStatus, data *string) error {
	panic(fmt.Errorf("not implemented: LastSyncedAt - lastSyncedAt"))
}

// State is the resolver for the state field.
func (r *kloudlite_io__pkg__types_SyncStatusInResolver) State(ctx context.Context, obj *types.SyncStatus, data *string) error {
	panic(fmt.Errorf("not implemented: State - state"))
}

// SyncScheduledAt is the resolver for the syncScheduledAt field.
func (r *kloudlite_io__pkg__types_SyncStatusInResolver) SyncScheduledAt(ctx context.Context, obj *types.SyncStatus, data *string) error {
	panic(fmt.Errorf("not implemented: SyncScheduledAt - syncScheduledAt"))
}

// Annotations is the resolver for the annotations field.
func (r *metadataInResolver) Annotations(ctx context.Context, obj *v1.ObjectMeta, data map[string]interface{}) error {
	panic(fmt.Errorf("not implemented: Annotations - annotations"))
}

// Labels is the resolver for the labels field.
func (r *metadataInResolver) Labels(ctx context.Context, obj *v1.ObjectMeta, data map[string]interface{}) error {
	panic(fmt.Errorf("not implemented: Labels - labels"))
}

// Github_com__kloudlite__operator__apis__crds__v1_AppSpec returns generated.Github_com__kloudlite__operator__apis__crds__v1_AppSpecResolver implementation.
func (r *Resolver) Github_com__kloudlite__operator__apis__crds__v1_AppSpec() generated.Github_com__kloudlite__operator__apis__crds__v1_AppSpecResolver {
	return &github_com__kloudlite__operator__apis__crds__v1_AppSpecResolver{r}
}

// Github_com__kloudlite__operator__apis__crds__v1_ManagedResourceSpec returns generated.Github_com__kloudlite__operator__apis__crds__v1_ManagedResourceSpecResolver implementation.
func (r *Resolver) Github_com__kloudlite__operator__apis__crds__v1_ManagedResourceSpec() generated.Github_com__kloudlite__operator__apis__crds__v1_ManagedResourceSpecResolver {
	return &github_com__kloudlite__operator__apis__crds__v1_ManagedResourceSpecResolver{r}
}

// Github_com__kloudlite__operator__apis__crds__v1_ManagedServiceSpec returns generated.Github_com__kloudlite__operator__apis__crds__v1_ManagedServiceSpecResolver implementation.
func (r *Resolver) Github_com__kloudlite__operator__apis__crds__v1_ManagedServiceSpec() generated.Github_com__kloudlite__operator__apis__crds__v1_ManagedServiceSpecResolver {
	return &github_com__kloudlite__operator__apis__crds__v1_ManagedServiceSpecResolver{r}
}

// Github_com__kloudlite__operator__apis__crds__v1_RouterSpec returns generated.Github_com__kloudlite__operator__apis__crds__v1_RouterSpecResolver implementation.
func (r *Resolver) Github_com__kloudlite__operator__apis__crds__v1_RouterSpec() generated.Github_com__kloudlite__operator__apis__crds__v1_RouterSpecResolver {
	return &github_com__kloudlite__operator__apis__crds__v1_RouterSpecResolver{r}
}

// Github_com__kloudlite__operator__pkg__operator_Status returns generated.Github_com__kloudlite__operator__pkg__operator_StatusResolver implementation.
func (r *Resolver) Github_com__kloudlite__operator__pkg__operator_Status() generated.Github_com__kloudlite__operator__pkg__operator_StatusResolver {
	return &github_com__kloudlite__operator__pkg__operator_StatusResolver{r}
}

// Kloudlite_io__pkg__types_SyncStatus returns generated.Kloudlite_io__pkg__types_SyncStatusResolver implementation.
func (r *Resolver) Kloudlite_io__pkg__types_SyncStatus() generated.Kloudlite_io__pkg__types_SyncStatusResolver {
	return &kloudlite_io__pkg__types_SyncStatusResolver{r}
}

// Metadata returns generated.MetadataResolver implementation.
func (r *Resolver) Metadata() generated.MetadataResolver { return &metadataResolver{r} }

// Github_com__kloudlite__operator__apis__crds__v1_AppSpecIn returns generated.Github_com__kloudlite__operator__apis__crds__v1_AppSpecInResolver implementation.
func (r *Resolver) Github_com__kloudlite__operator__apis__crds__v1_AppSpecIn() generated.Github_com__kloudlite__operator__apis__crds__v1_AppSpecInResolver {
	return &github_com__kloudlite__operator__apis__crds__v1_AppSpecInResolver{r}
}

// Github_com__kloudlite__operator__apis__crds__v1_ManagedResourceSpecIn returns generated.Github_com__kloudlite__operator__apis__crds__v1_ManagedResourceSpecInResolver implementation.
func (r *Resolver) Github_com__kloudlite__operator__apis__crds__v1_ManagedResourceSpecIn() generated.Github_com__kloudlite__operator__apis__crds__v1_ManagedResourceSpecInResolver {
	return &github_com__kloudlite__operator__apis__crds__v1_ManagedResourceSpecInResolver{r}
}

// Github_com__kloudlite__operator__apis__crds__v1_ManagedServiceSpecIn returns generated.Github_com__kloudlite__operator__apis__crds__v1_ManagedServiceSpecInResolver implementation.
func (r *Resolver) Github_com__kloudlite__operator__apis__crds__v1_ManagedServiceSpecIn() generated.Github_com__kloudlite__operator__apis__crds__v1_ManagedServiceSpecInResolver {
	return &github_com__kloudlite__operator__apis__crds__v1_ManagedServiceSpecInResolver{r}
}

// Github_com__kloudlite__operator__apis__crds__v1_RouterSpecIn returns generated.Github_com__kloudlite__operator__apis__crds__v1_RouterSpecInResolver implementation.
func (r *Resolver) Github_com__kloudlite__operator__apis__crds__v1_RouterSpecIn() generated.Github_com__kloudlite__operator__apis__crds__v1_RouterSpecInResolver {
	return &github_com__kloudlite__operator__apis__crds__v1_RouterSpecInResolver{r}
}

// Kloudlite_io__pkg__types_SyncStatusIn returns generated.Kloudlite_io__pkg__types_SyncStatusInResolver implementation.
func (r *Resolver) Kloudlite_io__pkg__types_SyncStatusIn() generated.Kloudlite_io__pkg__types_SyncStatusInResolver {
	return &kloudlite_io__pkg__types_SyncStatusInResolver{r}
}

// MetadataIn returns generated.MetadataInResolver implementation.
func (r *Resolver) MetadataIn() generated.MetadataInResolver { return &metadataInResolver{r} }

type github_com__kloudlite__operator__apis__crds__v1_AppSpecResolver struct{ *Resolver }
type github_com__kloudlite__operator__apis__crds__v1_ManagedResourceSpecResolver struct{ *Resolver }
type github_com__kloudlite__operator__apis__crds__v1_ManagedServiceSpecResolver struct{ *Resolver }
type github_com__kloudlite__operator__apis__crds__v1_RouterSpecResolver struct{ *Resolver }
type github_com__kloudlite__operator__pkg__operator_StatusResolver struct{ *Resolver }
type kloudlite_io__pkg__types_SyncStatusResolver struct{ *Resolver }
type metadataResolver struct{ *Resolver }
type github_com__kloudlite__operator__apis__crds__v1_AppSpecInResolver struct{ *Resolver }
type github_com__kloudlite__operator__apis__crds__v1_ManagedResourceSpecInResolver struct{ *Resolver }
type github_com__kloudlite__operator__apis__crds__v1_ManagedServiceSpecInResolver struct{ *Resolver }
type github_com__kloudlite__operator__apis__crds__v1_RouterSpecInResolver struct{ *Resolver }
type kloudlite_io__pkg__types_SyncStatusInResolver struct{ *Resolver }
type metadataInResolver struct{ *Resolver }

// !!! WARNING !!!
// The code below was going to be deleted when updating resolvers. It has been copied here so you have
// one last chance to move it out of harms way if you want. There are two reasons this happens:
//   - When renaming or deleting a resolver the old code will be put in here. You can safely delete
//     it when you're done.
//   - You have helper methods in this file. Move them out to keep these resolver files clean.
func (r *github_com__kloudlite__operator__apis__crds__v1_AppSpecResolver) DisplayName(ctx context.Context, obj *entities.App) (*string, error) {
	panic(fmt.Errorf("not implemented: DisplayName - displayName"))
}
func (r *github_com__kloudlite__operator__apis__crds__v1_AppSpecResolver) Freeze(ctx context.Context, obj *entities.App) (*bool, error) {
	panic(fmt.Errorf("not implemented: Freeze - freeze"))
}
func (r *github_com__kloudlite__operator__apis__crds__v1_AppSpecResolver) Region(ctx context.Context, obj *entities.App) (*string, error) {
	panic(fmt.Errorf("not implemented: Region - region"))
}
func (r *github_com__kloudlite__operator__apis__crds__v1_AppSpecResolver) Replicas(ctx context.Context, obj *entities.App) (*int, error) {
	panic(fmt.Errorf("not implemented: Replicas - replicas"))
}
func (r *github_com__kloudlite__operator__apis__crds__v1_AppSpecResolver) ServiceAccount(ctx context.Context, obj *entities.App) (*string, error) {
	panic(fmt.Errorf("not implemented: ServiceAccount - serviceAccount"))
}
