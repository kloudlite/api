type App {
  accountName: String!
  apiVersion: String!
  clusterName: String!
  enabled: Boolean
  kind: String!
  metadata: Metadata! @goField(name: "objectMeta")
  overrides: Github_com__kloudlite__operator__apis__crds__v1_AppOverrides
  restart: Boolean
  spec: Github_com__kloudlite__operator__apis__crds__v1_AppSpec
  status: Github_com__kloudlite__operator__apis__crds__v1_AppStatus
  syncStatus: Kloudlite_io__pkg__types_SyncStatus
}

type Github_com__kloudlite__operator__apis__crds__v1_AppOverrides {
  applied: Boolean
  patches: [Github_com__kloudlite__operator__apis__crds__v1_AppOverridesPatches]
}

type Github_com__kloudlite__operator__apis__crds__v1_AppOverridesPatches {
  op: String!
  path: String!
  value: Any
}

type Github_com__kloudlite__operator__apis__crds__v1_AppSpec {
  containers: [Github_com__kloudlite__operator__apis__crds__v1_AppSpecContainers]!
  displayName: String
  freeze: Boolean
  hpa: Github_com__kloudlite__operator__apis__crds__v1_AppSpecHpa
  intercept: Github_com__kloudlite__operator__apis__crds__v1_AppSpecIntercept
  nodeSelector: Map
  region: String
  replicas: Int
  serviceAccount: String
  services: [Github_com__kloudlite__operator__apis__crds__v1_AppSpecServices]
  tolerations: [Github_com__kloudlite__operator__apis__crds__v1_AppSpecTolerations]
}

type Github_com__kloudlite__operator__apis__crds__v1_AppSpecContainers {
  args: [String]
  command: [String]
  env: [Github_com__kloudlite__operator__apis__crds__v1_AppSpecContainersEnv]
  envFrom: [Github_com__kloudlite__operator__apis__crds__v1_AppSpecContainersEnvFrom]
  image: String!
  imagePullPolicy: String
  livenessProbe: Github_com__kloudlite__operator__apis__crds__v1_AppSpecContainersLivenessProbe
  name: String!
  readinessProbe: Github_com__kloudlite__operator__apis__crds__v1_AppSpecContainersReadinessProbe
  resourceCpu: Github_com__kloudlite__operator__apis__crds__v1_AppSpecContainersResourceCpu
  resourceMemory: Github_com__kloudlite__operator__apis__crds__v1_AppSpecContainersResourceMemory
  volumes: [Github_com__kloudlite__operator__apis__crds__v1_AppSpecContainersVolumes]
}

type Github_com__kloudlite__operator__apis__crds__v1_AppSpecContainersEnv {
  key: String!
  optional: Boolean
  refKey: String
  refName: String
  type: String
  value: String
}

type Github_com__kloudlite__operator__apis__crds__v1_AppSpecContainersEnvFrom {
  refName: String!
  type: String!
}

type Github_com__kloudlite__operator__apis__crds__v1_AppSpecContainersLivenessProbe {
  failureThreshold: Int
  httpGet: Github_com__kloudlite__operator__apis__crds__v1_AppSpecContainersLivenessProbeHttpGet
  initialDelay: Int
  interval: Int
  shell: Github_com__kloudlite__operator__apis__crds__v1_AppSpecContainersLivenessProbeShell
  tcp: Github_com__kloudlite__operator__apis__crds__v1_AppSpecContainersLivenessProbeTcp
  type: String!
}

type Github_com__kloudlite__operator__apis__crds__v1_AppSpecContainersLivenessProbeHttpGet {
  httpHeaders: Map
  path: String!
  port: Int!
}

type Github_com__kloudlite__operator__apis__crds__v1_AppSpecContainersLivenessProbeShell {
  command: [String]
}

type Github_com__kloudlite__operator__apis__crds__v1_AppSpecContainersLivenessProbeTcp {
  port: Int!
}

type Github_com__kloudlite__operator__apis__crds__v1_AppSpecContainersReadinessProbe {
  failureThreshold: Int
  httpGet: Github_com__kloudlite__operator__apis__crds__v1_AppSpecContainersReadinessProbeHttpGet
  initialDelay: Int
  interval: Int
  shell: Github_com__kloudlite__operator__apis__crds__v1_AppSpecContainersReadinessProbeShell
  tcp: Github_com__kloudlite__operator__apis__crds__v1_AppSpecContainersReadinessProbeTcp
  type: String!
}

type Github_com__kloudlite__operator__apis__crds__v1_AppSpecContainersReadinessProbeHttpGet {
  httpHeaders: Map
  path: String!
  port: Int!
}

type Github_com__kloudlite__operator__apis__crds__v1_AppSpecContainersReadinessProbeShell {
  command: [String]
}

type Github_com__kloudlite__operator__apis__crds__v1_AppSpecContainersReadinessProbeTcp {
  port: Int!
}

type Github_com__kloudlite__operator__apis__crds__v1_AppSpecContainersResourceCpu {
  max: String
  min: String
}

type Github_com__kloudlite__operator__apis__crds__v1_AppSpecContainersResourceMemory {
  max: String
  min: String
}

type Github_com__kloudlite__operator__apis__crds__v1_AppSpecContainersVolumes {
  items: [Github_com__kloudlite__operator__apis__crds__v1_AppSpecContainersVolumesItems]
  mountPath: String!
  refName: String!
  type: String!
}

type Github_com__kloudlite__operator__apis__crds__v1_AppSpecContainersVolumesItems {
  fileName: String
  key: String!
}

type Github_com__kloudlite__operator__apis__crds__v1_AppSpecHpa {
  enabled: Boolean
  maxReplicas: Int
  minReplicas: Int
  thresholdCpu: Int
  thresholdMemory: Int
}

type Github_com__kloudlite__operator__apis__crds__v1_AppSpecIntercept {
  enabled: Boolean!
  toDevice: String!
}

type Github_com__kloudlite__operator__apis__crds__v1_AppSpecServices {
  name: String
  port: Int!
  targetPort: Int
  type: String
}

type Github_com__kloudlite__operator__apis__crds__v1_AppSpecTolerations {
  effect: String
  key: String
  operator: String
  tolerationSeconds: Int
  value: String
}

type Github_com__kloudlite__operator__apis__crds__v1_AppStatus {
  checks: Map
  isReady: Boolean
  lastReconcileTime: String
  message: Map
  resources: [Github_com__kloudlite__operator__apis__crds__v1_AppStatusResources]
}

type Github_com__kloudlite__operator__apis__crds__v1_AppStatusResources {
  apiVersion: String
  kind: String
  name: String!
  namespace: String!
}

input AppIn {
  accountName: String!
  apiVersion: String!
  clusterName: String!
  enabled: Boolean
  kind: String!
  metadata: Metadata! @goField(name: "objectMeta")
  overrides: Github_com__kloudlite__operator__apis__crds__v1_AppOverrides
  restart: Boolean
  spec: Github_com__kloudlite__operator__apis__crds__v1_AppSpec
  status: Github_com__kloudlite__operator__apis__crds__v1_AppStatus
  status: Github_com__kloudlite__operator__apis__crds__v1_AppStatusIn
  syncStatus: Kloudlite_io__pkg__types_SyncStatusIn
}

input Github_com__kloudlite__operator__apis__crds__v1_AppOverridesIn {
  applied: Boolean
  patches: [Github_com__kloudlite__operator__apis__crds__v1_AppOverridesPatchesIn]
}

input Github_com__kloudlite__operator__apis__crds__v1_AppOverridesPatchesIn {
  op: String!
  path: String!
  value: Any
}

input Github_com__kloudlite__operator__apis__crds__v1_AppSpecContainersEnvFromIn {
  refName: String!
  type: String!
}

input Github_com__kloudlite__operator__apis__crds__v1_AppSpecContainersEnvIn {
  key: String!
  optional: Boolean
  refKey: String
  refName: String
  type: String
  value: String
}

input Github_com__kloudlite__operator__apis__crds__v1_AppSpecContainersIn {
  args: [String]
  command: [String]
  env: [Github_com__kloudlite__operator__apis__crds__v1_AppSpecContainersEnvIn]
  envFrom: [Github_com__kloudlite__operator__apis__crds__v1_AppSpecContainersEnvFromIn]
  image: String!
  imagePullPolicy: String
  livenessProbe: Github_com__kloudlite__operator__apis__crds__v1_AppSpecContainersLivenessProbeIn
  name: String!
  readinessProbe: Github_com__kloudlite__operator__apis__crds__v1_AppSpecContainersReadinessProbeIn
  resourceCpu: Github_com__kloudlite__operator__apis__crds__v1_AppSpecContainersResourceCpuIn
  resourceMemory: Github_com__kloudlite__operator__apis__crds__v1_AppSpecContainersResourceMemoryIn
  volumes: [Github_com__kloudlite__operator__apis__crds__v1_AppSpecContainersVolumesIn]
}

input Github_com__kloudlite__operator__apis__crds__v1_AppSpecContainersLivenessProbeHttpGetIn {
  httpHeaders: Map
  path: String!
  port: Int!
}

input Github_com__kloudlite__operator__apis__crds__v1_AppSpecContainersLivenessProbeIn {
  failureThreshold: Int
  httpGet: Github_com__kloudlite__operator__apis__crds__v1_AppSpecContainersLivenessProbeHttpGetIn
  initialDelay: Int
  interval: Int
  shell: Github_com__kloudlite__operator__apis__crds__v1_AppSpecContainersLivenessProbeShellIn
  tcp: Github_com__kloudlite__operator__apis__crds__v1_AppSpecContainersLivenessProbeTcpIn
  type: String!
}

input Github_com__kloudlite__operator__apis__crds__v1_AppSpecContainersLivenessProbeShellIn {
  command: [String]
}

input Github_com__kloudlite__operator__apis__crds__v1_AppSpecContainersLivenessProbeTcpIn {
  port: Int!
}

input Github_com__kloudlite__operator__apis__crds__v1_AppSpecContainersReadinessProbeHttpGetIn {
  httpHeaders: Map
  path: String!
  port: Int!
}

input Github_com__kloudlite__operator__apis__crds__v1_AppSpecContainersReadinessProbeIn {
  failureThreshold: Int
  httpGet: Github_com__kloudlite__operator__apis__crds__v1_AppSpecContainersReadinessProbeHttpGetIn
  initialDelay: Int
  interval: Int
  shell: Github_com__kloudlite__operator__apis__crds__v1_AppSpecContainersReadinessProbeShellIn
  tcp: Github_com__kloudlite__operator__apis__crds__v1_AppSpecContainersReadinessProbeTcpIn
  type: String!
}

input Github_com__kloudlite__operator__apis__crds__v1_AppSpecContainersReadinessProbeShellIn {
  command: [String]
}

input Github_com__kloudlite__operator__apis__crds__v1_AppSpecContainersReadinessProbeTcpIn {
  port: Int!
}

input Github_com__kloudlite__operator__apis__crds__v1_AppSpecContainersResourceCpuIn {
  max: String
  min: String
}

input Github_com__kloudlite__operator__apis__crds__v1_AppSpecContainersResourceMemoryIn {
  max: String
  min: String
}

input Github_com__kloudlite__operator__apis__crds__v1_AppSpecContainersVolumesIn {
  items: [Github_com__kloudlite__operator__apis__crds__v1_AppSpecContainersVolumesItemsIn]
  mountPath: String!
  refName: String!
  type: String!
}

input Github_com__kloudlite__operator__apis__crds__v1_AppSpecContainersVolumesItemsIn {
  fileName: String
  key: String!
}

input Github_com__kloudlite__operator__apis__crds__v1_AppSpecHpaIn {
  enabled: Boolean
  maxReplicas: Int
  minReplicas: Int
  thresholdCpu: Int
  thresholdMemory: Int
}

input Github_com__kloudlite__operator__apis__crds__v1_AppSpecIn {
  containers: [Github_com__kloudlite__operator__apis__crds__v1_AppSpecContainersIn]!
  displayName: String
  freeze: Boolean
  hpa: Github_com__kloudlite__operator__apis__crds__v1_AppSpecHpaIn
  intercept: Github_com__kloudlite__operator__apis__crds__v1_AppSpecInterceptIn
  nodeSelector: Map
  region: String
  replicas: Int
  serviceAccount: String
  services: [Github_com__kloudlite__operator__apis__crds__v1_AppSpecServicesIn]
  tolerations: [Github_com__kloudlite__operator__apis__crds__v1_AppSpecTolerationsIn]
}

input Github_com__kloudlite__operator__apis__crds__v1_AppSpecInterceptIn {
  enabled: Boolean!
  toDevice: String!
}

input Github_com__kloudlite__operator__apis__crds__v1_AppSpecServicesIn {
  name: String
  port: Int!
  targetPort: Int
  type: String
}

input Github_com__kloudlite__operator__apis__crds__v1_AppSpecTolerationsIn {
  effect: String
  key: String
  operator: String
  tolerationSeconds: Int
  value: String
}

input Github_com__kloudlite__operator__apis__crds__v1_AppStatusIn {
  checks: Map
  isReady: Boolean
  lastReconcileTime: String
  message: Map
  resources: [Github_com__kloudlite__operator__apis__crds__v1_AppStatusResourcesIn]
}

input Github_com__kloudlite__operator__apis__crds__v1_AppStatusResourcesIn {
  apiVersion: String
  kind: String
  name: String!
  namespace: String!
}

