type Github_com__kloudlite__operator__apis__crds__v1_ManagedResourceOverrides {
  applied: Boolean
  patches: [Github_com__kloudlite__operator__apis__crds__v1_ManagedResourceOverridesPatches]
}

type Github_com__kloudlite__operator__apis__crds__v1_ManagedResourceOverridesPatches {
  op: String!
  path: String!
  value: Any
}

type Github_com__kloudlite__operator__apis__crds__v1_ManagedResourceSpec {
  inputs: Map
  mresKind: Github_com__kloudlite__operator__apis__crds__v1_ManagedResourceSpecMresKind!
  msvcRef: Github_com__kloudlite__operator__apis__crds__v1_ManagedResourceSpecMsvcRef!
}

type Github_com__kloudlite__operator__apis__crds__v1_ManagedResourceSpecMresKind {
  kind: String!
}

type Github_com__kloudlite__operator__apis__crds__v1_ManagedResourceSpecMsvcRef {
  apiVersion: String!
  kind: String
  name: String!
}

type Github_com__kloudlite__operator__apis__crds__v1_ManagedResourceStatus {
  checks: Map
  isReady: Boolean
  lastReconcileTime: String
  message: Map
  resources: [Github_com__kloudlite__operator__apis__crds__v1_ManagedResourceStatusResources]
}

type Github_com__kloudlite__operator__apis__crds__v1_ManagedResourceStatusResources {
  apiVersion: String
  kind: String
  name: String!
  namespace: String!
}

type MRes {
  accountName: String!
  apiVersion: String!
  clusterName: String!
  enabled: Boolean
  kind: String!
  metadata: Metadata! @goField(name: "objectMeta")
  overrides: Github_com__kloudlite__operator__apis__crds__v1_ManagedResourceOverrides
  spec: Github_com__kloudlite__operator__apis__crds__v1_ManagedResourceSpec
  status: Github_com__kloudlite__operator__apis__crds__v1_ManagedResourceStatus
  syncStatus: Kloudlite_io__pkg__types_SyncStatus
}

input Github_com__kloudlite__operator__apis__crds__v1_ManagedResourceOverridesIn {
  applied: Boolean
  patches: [Github_com__kloudlite__operator__apis__crds__v1_ManagedResourceOverridesPatchesIn]
}

input Github_com__kloudlite__operator__apis__crds__v1_ManagedResourceOverridesPatchesIn {
  op: String!
  path: String!
  value: Any
}

input Github_com__kloudlite__operator__apis__crds__v1_ManagedResourceSpecIn {
  inputs: Map
  mresKind: Github_com__kloudlite__operator__apis__crds__v1_ManagedResourceSpecMresKindIn!
  msvcRef: Github_com__kloudlite__operator__apis__crds__v1_ManagedResourceSpecMsvcRefIn!
}

input Github_com__kloudlite__operator__apis__crds__v1_ManagedResourceSpecMresKindIn {
  kind: String!
}

input Github_com__kloudlite__operator__apis__crds__v1_ManagedResourceSpecMsvcRefIn {
  apiVersion: String!
  kind: String
  name: String!
}

input Github_com__kloudlite__operator__apis__crds__v1_ManagedResourceStatusIn {
  checks: Map
  isReady: Boolean
  lastReconcileTime: String
  message: Map
  resources: [Github_com__kloudlite__operator__apis__crds__v1_ManagedResourceStatusResourcesIn]
}

input Github_com__kloudlite__operator__apis__crds__v1_ManagedResourceStatusResourcesIn {
  apiVersion: String
  kind: String
  name: String!
  namespace: String!
}

input MResIn {
  accountName: String!
  apiVersion: String!
  clusterName: String!
  enabled: Boolean
  kind: String!
  metadata: Metadata! @goField(name: "objectMeta")
  overrides: Github_com__kloudlite__operator__apis__crds__v1_ManagedResourceOverrides
  spec: Github_com__kloudlite__operator__apis__crds__v1_ManagedResourceSpec
  status: Github_com__kloudlite__operator__apis__crds__v1_ManagedResourceStatus
  status: Github_com__kloudlite__operator__apis__crds__v1_ManagedResourceStatusIn
  syncStatus: Kloudlite_io__pkg__types_SyncStatusIn
}

