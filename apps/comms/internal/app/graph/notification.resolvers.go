package graph

// This file will be automatically regenerated based on the schema, any resolver implementations
// will be copied through when generating and any unknown code will be moved to the end.
// Code generated by github.com/99designs/gqlgen version v0.17.45

import (
	"context"
	"fmt"

	"github.com/kloudlite/api/apps/comms/internal/app/graph/generated"
	"github.com/kloudlite/api/apps/comms/internal/app/graph/model"
	"github.com/kloudlite/api/apps/comms/types"
)

// Content is the resolver for the content field.
func (r *notificationResolver) Content(ctx context.Context, obj *types.Notification) (*model.GithubComKloudliteAPIAppsCommsTypesNotifyContent, error) {
	panic(fmt.Errorf("not implemented: Content - content"))
}

// CreationTime is the resolver for the creationTime field.
func (r *notificationResolver) CreationTime(ctx context.Context, obj *types.Notification) (string, error) {
	panic(fmt.Errorf("not implemented: CreationTime - creationTime"))
}

// NotificationType is the resolver for the notificationType field.
func (r *notificationResolver) NotificationType(ctx context.Context, obj *types.Notification) (model.GithubComKloudliteAPIAppsCommsTypesNotificationType, error) {
	panic(fmt.Errorf("not implemented: NotificationType - notificationType"))
}

// UpdateTime is the resolver for the updateTime field.
func (r *notificationResolver) UpdateTime(ctx context.Context, obj *types.Notification) (string, error) {
	panic(fmt.Errorf("not implemented: UpdateTime - updateTime"))
}

// Notification returns generated.NotificationResolver implementation.
func (r *Resolver) Notification() generated.NotificationResolver { return &notificationResolver{r} }

type notificationResolver struct{ *Resolver }
