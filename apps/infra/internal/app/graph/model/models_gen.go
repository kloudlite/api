// Code generated by github.com/99designs/gqlgen, DO NOT EDIT.

package model

import (
	"fmt"
	"io"
	"strconv"

	"k8s.io/apimachinery/pkg/apis/meta/v1"
	"kloudlite.io/apps/infra/internal/entities"
)

type CloudProviderSecretEdge struct {
	Cursor string                        `json:"cursor"`
	Node   *entities.CloudProviderSecret `json:"node"`
}

type CloudProviderSecretPaginatedRecords struct {
	Edges      []*CloudProviderSecretEdge `json:"edges"`
	PageInfo   *PageInfo                  `json:"pageInfo"`
	TotalCount int                        `json:"totalCount"`
}

type ClusterEdge struct {
	Cursor string            `json:"cursor"`
	Node   *entities.Cluster `json:"node"`
}

type ClusterPaginatedRecords struct {
	Edges      []*ClusterEdge `json:"edges"`
	PageInfo   *PageInfo      `json:"pageInfo"`
	TotalCount int            `json:"totalCount"`
}

type GithubComKloudliteOperatorApisClustersV1ClusterSpec struct {
	AccountName            string                                                                     `json:"accountName"`
	AgentHelmValuesRef     *GithubComKloudliteOperatorApisClustersV1ClusterSpecAgentHelmValuesRef     `json:"agentHelmValuesRef"`
	AvailabilityMode       string                                                                     `json:"availabilityMode"`
	CloudProvider          string                                                                     `json:"cloudProvider"`
	CredentialsRef         *GithubComKloudliteOperatorApisClustersV1ClusterSpecCredentialsRef         `json:"credentialsRef"`
	NodeIps                []*string                                                                  `json:"nodeIps,omitempty"`
	OperatorsHelmValuesRef *GithubComKloudliteOperatorApisClustersV1ClusterSpecOperatorsHelmValuesRef `json:"operatorsHelmValuesRef"`
	Region                 string                                                                     `json:"region"`
	Vpc                    *string                                                                    `json:"vpc,omitempty"`
}

type GithubComKloudliteOperatorApisClustersV1ClusterSpecAgentHelmValuesRef struct {
	Name      string  `json:"name"`
	Namespace *string `json:"namespace,omitempty"`
}

type GithubComKloudliteOperatorApisClustersV1ClusterSpecAgentHelmValuesRefIn struct {
	Name      string  `json:"name"`
	Namespace *string `json:"namespace,omitempty"`
}

type GithubComKloudliteOperatorApisClustersV1ClusterSpecCredentialsRef struct {
	Name      string  `json:"name"`
	Namespace *string `json:"namespace,omitempty"`
}

type GithubComKloudliteOperatorApisClustersV1ClusterSpecCredentialsRefIn struct {
	Name      string  `json:"name"`
	Namespace *string `json:"namespace,omitempty"`
}

type GithubComKloudliteOperatorApisClustersV1ClusterSpecIn struct {
	AccountName            string                                                                       `json:"accountName"`
	AgentHelmValuesRef     *GithubComKloudliteOperatorApisClustersV1ClusterSpecAgentHelmValuesRefIn     `json:"agentHelmValuesRef"`
	AvailabilityMode       string                                                                       `json:"availabilityMode"`
	CloudProvider          string                                                                       `json:"cloudProvider"`
	CredentialsRef         *GithubComKloudliteOperatorApisClustersV1ClusterSpecCredentialsRefIn         `json:"credentialsRef"`
	NodeIps                []*string                                                                    `json:"nodeIps,omitempty"`
	OperatorsHelmValuesRef *GithubComKloudliteOperatorApisClustersV1ClusterSpecOperatorsHelmValuesRefIn `json:"operatorsHelmValuesRef"`
	Region                 string                                                                       `json:"region"`
	Vpc                    *string                                                                      `json:"vpc,omitempty"`
}

type GithubComKloudliteOperatorApisClustersV1ClusterSpecOperatorsHelmValuesRef struct {
	Name      string  `json:"name"`
	Namespace *string `json:"namespace,omitempty"`
}

type GithubComKloudliteOperatorApisClustersV1ClusterSpecOperatorsHelmValuesRefIn struct {
	Name      string  `json:"name"`
	Namespace *string `json:"namespace,omitempty"`
}

type GithubComKloudliteOperatorApisClustersV1NodePoolSpec struct {
	AwsNodeConfig *GithubComKloudliteOperatorApisClustersV1NodePoolSpecAwsNodeConfig `json:"awsNodeConfig,omitempty"`
	MaxCount      int                                                                `json:"maxCount"`
	MinCount      int                                                                `json:"minCount"`
	TargetCount   int                                                                `json:"targetCount"`
}

type GithubComKloudliteOperatorApisClustersV1NodePoolSpecAwsNodeConfig struct {
	ImageID       *string                                                                         `json:"imageId,omitempty"`
	IsGpu         *bool                                                                           `json:"isGpu,omitempty"`
	OnDemandSpecs *GithubComKloudliteOperatorApisClustersV1NodePoolSpecAwsNodeConfigOnDemandSpecs `json:"onDemandSpecs,omitempty"`
	ProvisionMode string                                                                          `json:"provisionMode"`
	Region        *string                                                                         `json:"region,omitempty"`
	SpotSpecs     *GithubComKloudliteOperatorApisClustersV1NodePoolSpecAwsNodeConfigSpotSpecs     `json:"spotSpecs,omitempty"`
	Vpc           *string                                                                         `json:"vpc,omitempty"`
}

type GithubComKloudliteOperatorApisClustersV1NodePoolSpecAwsNodeConfigIn struct {
	ImageID       *string                                                                           `json:"imageId,omitempty"`
	IsGpu         *bool                                                                             `json:"isGpu,omitempty"`
	OnDemandSpecs *GithubComKloudliteOperatorApisClustersV1NodePoolSpecAwsNodeConfigOnDemandSpecsIn `json:"onDemandSpecs,omitempty"`
	ProvisionMode string                                                                            `json:"provisionMode"`
	Region        *string                                                                           `json:"region,omitempty"`
	SpotSpecs     *GithubComKloudliteOperatorApisClustersV1NodePoolSpecAwsNodeConfigSpotSpecsIn     `json:"spotSpecs,omitempty"`
	Vpc           *string                                                                           `json:"vpc,omitempty"`
}

type GithubComKloudliteOperatorApisClustersV1NodePoolSpecAwsNodeConfigOnDemandSpecs struct {
	InstanceType string `json:"instanceType"`
}

type GithubComKloudliteOperatorApisClustersV1NodePoolSpecAwsNodeConfigOnDemandSpecsIn struct {
	InstanceType string `json:"instanceType"`
}

type GithubComKloudliteOperatorApisClustersV1NodePoolSpecAwsNodeConfigSpotSpecs struct {
	CPUMax int `json:"cpuMax"`
	CPUMin int `json:"cpuMin"`
	MemMax int `json:"memMax"`
	MemMin int `json:"memMin"`
}

type GithubComKloudliteOperatorApisClustersV1NodePoolSpecAwsNodeConfigSpotSpecsIn struct {
	CPUMax int `json:"cpuMax"`
	CPUMin int `json:"cpuMin"`
	MemMax int `json:"memMax"`
	MemMin int `json:"memMin"`
}

type GithubComKloudliteOperatorApisClustersV1NodePoolSpecIn struct {
	AwsNodeConfig *GithubComKloudliteOperatorApisClustersV1NodePoolSpecAwsNodeConfigIn `json:"awsNodeConfig,omitempty"`
	MaxCount      int                                                                  `json:"maxCount"`
	MinCount      int                                                                  `json:"minCount"`
	TargetCount   int                                                                  `json:"targetCount"`
}

type GithubComKloudliteOperatorApisClustersV1NodeSpec struct {
	ClusterName  *string   `json:"clusterName,omitempty"`
	NodePoolName *string   `json:"nodePoolName,omitempty"`
	NodeType     string    `json:"nodeType"`
	Taints       []*string `json:"taints,omitempty"`
}

type GithubComKloudliteOperatorApisClustersV1NodeSpecIn struct {
	ClusterName  *string   `json:"clusterName,omitempty"`
	NodePoolName *string   `json:"nodePoolName,omitempty"`
	NodeType     string    `json:"nodeType"`
	Taints       []*string `json:"taints,omitempty"`
}

type GithubComKloudliteOperatorPkgRawJSONRawJSON struct {
	RawMessage interface{} `json:"RawMessage,omitempty"`
}

type NodeEdge struct {
	Cursor string         `json:"cursor"`
	Node   *entities.Node `json:"node"`
}

type NodeIn struct {
	APIVersion *string                                             `json:"apiVersion,omitempty"`
	Kind       *string                                             `json:"kind,omitempty"`
	Metadata   *v1.ObjectMeta                                      `json:"metadata"`
	Spec       *GithubComKloudliteOperatorApisClustersV1NodeSpecIn `json:"spec"`
}

type NodePaginatedRecords struct {
	Edges      []*NodeEdge `json:"edges"`
	PageInfo   *PageInfo   `json:"pageInfo"`
	TotalCount int         `json:"totalCount"`
}

type NodePoolEdge struct {
	Cursor string             `json:"cursor"`
	Node   *entities.NodePool `json:"node"`
}

type NodePoolPaginatedRecords struct {
	Edges      []*NodePoolEdge `json:"edges"`
	PageInfo   *PageInfo       `json:"pageInfo"`
	TotalCount int             `json:"totalCount"`
}

type PageInfo struct {
	EndCursor       *string `json:"endCursor,omitempty"`
	HasNextPage     bool    `json:"hasNextPage"`
	HasPreviousPage bool    `json:"hasPreviousPage"`
	StartCursor     *string `json:"startCursor,omitempty"`
}

type PaginationSortOrder string

const (
	PaginationSortOrderAsc  PaginationSortOrder = "ASC"
	PaginationSortOrderDesc PaginationSortOrder = "DESC"
)

var AllPaginationSortOrder = []PaginationSortOrder{
	PaginationSortOrderAsc,
	PaginationSortOrderDesc,
}

func (e PaginationSortOrder) IsValid() bool {
	switch e {
	case PaginationSortOrderAsc, PaginationSortOrderDesc:
		return true
	}
	return false
}

func (e PaginationSortOrder) String() string {
	return string(e)
}

func (e *PaginationSortOrder) UnmarshalGQL(v interface{}) error {
	str, ok := v.(string)
	if !ok {
		return fmt.Errorf("enums must be strings")
	}

	*e = PaginationSortOrder(str)
	if !e.IsValid() {
		return fmt.Errorf("%s is not a valid PaginationSortOrder", str)
	}
	return nil
}

func (e PaginationSortOrder) MarshalGQL(w io.Writer) {
	fmt.Fprint(w, strconv.Quote(e.String()))
}
